{{- if .Values.securityServer.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "xroad.fullname" . }}-env
  labels:
    {{- include "xroad.labels" . | nindent 4 }}
type: Opaque
data:
  {{- if .Values.secrets.envSecret.tokenPIN }}
  XROAD_TOKEN_PIN: {{ .Values.secrets.envSecret.tokenPIN | b64enc | quote }}
  {{- end }}
  {{- if .Values.secrets.envSecret.adminUserName }}
  XROAD_ADMIN_USER: {{ .Values.secrets.envSecret.adminUserName | b64enc | quote }}
  {{- end }}
  {{- if .Values.secrets.envSecret.adminUserPassword }}
  XROAD_ADMIN_PASSWORD: {{ .Values.secrets.envSecret.adminUserPassword | b64enc | quote }}
  {{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "xroad.fullname" . }}-ssh
  labels:
    {{- include "xroad.labels" . | nindent 4 }}
type: Opaque
data:
  {{- if .Values.secrets.sshSecret.privateKey }}
  private-key: {{ .Values.secrets.sshSecret.privateKey | b64enc | quote }}
  {{- end }}
  {{- if .Values.secrets.sshSecret.publicKey }}
  public-key: {{ .Values.secrets.sshSecret.publicKey | b64enc | quote }}
  {{- end }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "xroad.securityServer.fullname" . }}-primary
  labels:
    {{- include "xroad.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "xroad.securityServer.fullname" . }}-headless
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "xroad.name" . }}-security-server
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: primary
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "xroad.name" . }}-security-server
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: primary
    spec:
      {{- if .Values.securityServer.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.securityServer.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.podAntiAffinity.enabled }}
      affinity:
        podAntiAffinity:
          {{- if eq .Values.podAntiAffinity.type "requiredDuringSchedulingIgnoredDuringExecution" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          {{- else }}
          preferredDuringSchedulingIgnoredDuringExecution:
          {{- end }}
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - {{ include "xroad.name" . }}-security-server
            topologyKey: kubernetes.io/hostname
      {{- end }}
      containers:
      - name: security-server
        image: "{{ .Values.securityServer.image.repository }}:{{ .Values.securityServer.image.primaryTag }}"
        imagePullPolicy: {{ .Values.securityServer.image.pullPolicy }}
        ports:
        - name: admin
          containerPort: 4000
          protocol: TCP
        - name: consumer
          containerPort: 443
          protocol: TCP
        - name: transport
          containerPort: 5588
          protocol: TCP
        - name: ocsp
          containerPort: 5577
          protocol: TCP
        - name: health
          containerPort: 5580
          protocol: TCP
        env:
        - name: XROAD_TOKEN_PIN
          valueFrom:
            secretKeyRef:
              name: {{ include "xroad.fullname" . }}-env
              key: XROAD_TOKEN_PIN
              optional: true
        - name: XROAD_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "xroad.fullname" . }}-env
              key: XROAD_ADMIN_USER
              optional: true
        - name: XROAD_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "xroad.fullname" . }}-env
              key: XROAD_ADMIN_PASSWORD
              optional: true
        {{- if .Values.externalDatabase.enabled }}
        - name: XROAD_DATABASE_HOST
          value: {{ .Values.externalDatabase.host | quote }}
        - name: XROAD_DATABASE_PORT
          value: {{ .Values.externalDatabase.port | quote }}
        - name: XROAD_DATABASE_NAME
          value: {{ .Values.externalDatabase.database | quote }}
        - name: XROAD_DATABASE_USER
          value: {{ .Values.externalDatabase.username | quote }}
        - name: XROAD_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: xroad-postgres-ha.credentials.xroad
              key: password
              optional: true
        - name: XROAD_DATABASE_SSL_MODE
          value: {{ .Values.externalDatabase.sslMode | quote }}
        {{- else }}
        - name: XROAD_DATABASE_HOST
          value: {{ include "xroad.postgresql.fullname" . }}
        - name: XROAD_DATABASE_PORT
          value: "5432"
        - name: XROAD_DATABASE_NAME
          value: "xroad"
        - name: XROAD_DATABASE_USER
          value: "xroad"
        - name: XROAD_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "xroad.postgresql.fullname" . }}-credentials
              key: password
        {{- end }}
        resources:
          {{- toYaml .Values.securityServer.resources | nindent 10 }}
        volumeMounts:
        - name: xroad-etc
          mountPath: /etc/xroad
        - name: xroad-lib
          mountPath: /var/lib/xroad
        livenessProbe:
          httpGet:
            path: /
            port: admin
            scheme: HTTPS
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: admin
            scheme: HTTPS
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
  volumeClaimTemplates:
  - metadata:
      name: xroad-etc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.securityServer.persistence.etcVolumeSize }}
  - metadata:
      name: xroad-lib
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.securityServer.persistence.libVolumeSize }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "xroad.securityServer.fullname" . }}-secondary
  labels:
    {{- include "xroad.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.securityServer.secondaryReplicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "xroad.name" . }}-security-server
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: secondary
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "xroad.name" . }}-security-server
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: secondary
    spec:
      containers:
      - name: security-server
        image: "{{ .Values.securityServer.image.repository }}:{{ .Values.securityServer.image.secondaryTag }}"
        imagePullPolicy: {{ .Values.securityServer.image.pullPolicy }}
        ports:
        - name: admin
          containerPort: 4000
          protocol: TCP
        - name: consumer
          containerPort: 443
          protocol: TCP
        - name: transport
          containerPort: 5588
          protocol: TCP
        - name: ocsp
          containerPort: 5577
          protocol: TCP
        - name: health
          containerPort: 5580
          protocol: TCP
        env:
        - name: XROAD_TOKEN_PIN
          valueFrom:
            secretKeyRef:
              name: {{ include "xroad.fullname" . }}-env
              key: XROAD_TOKEN_PIN
              optional: true
        - name: XROAD_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "xroad.fullname" . }}-env
              key: XROAD_ADMIN_USER
              optional: true
        - name: XROAD_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "xroad.fullname" . }}-env
              key: XROAD_ADMIN_PASSWORD
              optional: true
        {{- if .Values.externalDatabase.enabled }}
        - name: XROAD_DATABASE_HOST
          value: {{ .Values.externalDatabase.host | quote }}
        - name: XROAD_DATABASE_PORT
          value: {{ .Values.externalDatabase.port | quote }}
        - name: XROAD_DATABASE_NAME
          value: {{ .Values.externalDatabase.database | quote }}
        - name: XROAD_DATABASE_USER
          value: {{ .Values.externalDatabase.username | quote }}
        - name: XROAD_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: xroad-postgres-ha.credentials.xroad
              key: password
              optional: true
        - name: XROAD_DATABASE_SSL_MODE
          value: {{ .Values.externalDatabase.sslMode | quote }}
        {{- else }}
        - name: XROAD_DATABASE_HOST
          value: {{ include "xroad.postgresql.fullname" . }}
        - name: XROAD_DATABASE_PORT
          value: "5432"
        - name: XROAD_DATABASE_NAME
          value: "xroad"
        - name: XROAD_DATABASE_USER
          value: "xroad"
        - name: XROAD_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "xroad.postgresql.fullname" . }}-credentials
              key: password
        {{- end }}
        resources:
          {{- toYaml .Values.securityServer.resources | nindent 10 }}
        volumeMounts:
        - name: xroad-etc
          mountPath: /etc/xroad
        - name: xroad-lib
          mountPath: /var/lib/xroad
        livenessProbe:
          httpGet:
            path: /
            port: admin
            scheme: HTTPS
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: admin
            scheme: HTTPS
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: xroad-etc
        emptyDir: {}
      - name: xroad-lib
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "xroad.securityServer.fullname" . }}
  labels:
    {{- include "xroad.labels" . | nindent 4 }}
spec:
  type: {{ .Values.securityServer.service.type }}
  ports:
  - name: admin
    port: 4000
    targetPort: admin
    protocol: TCP
    {{- if and (eq .Values.securityServer.service.type "NodePort") .Values.securityServer.service.adminNodePort }}
    nodePort: {{ .Values.securityServer.service.adminNodePort }}
    {{- end }}
  - name: consumer
    port: 443
    targetPort: consumer
    protocol: TCP
    {{- if and (eq .Values.securityServer.service.type "NodePort") .Values.securityServer.service.consumerNodePort }}
    nodePort: {{ .Values.securityServer.service.consumerNodePort }}
    {{- end }}
  - name: transport
    port: 5588
    targetPort: transport
    protocol: TCP
    {{- if and (eq .Values.securityServer.service.type "NodePort") .Values.securityServer.service.transportNodePort }}
    nodePort: {{ .Values.securityServer.service.transportNodePort }}
    {{- end }}
  - name: ocsp
    port: 5577
    targetPort: ocsp
    protocol: TCP
    {{- if and (eq .Values.securityServer.service.type "NodePort") .Values.securityServer.service.ocspNodePort }}
    nodePort: {{ .Values.securityServer.service.ocspNodePort }}
    {{- end }}
  - name: health
    port: 5580
    targetPort: health
    protocol: TCP
    {{- if and (eq .Values.securityServer.service.type "NodePort") .Values.securityServer.service.healthNodePort }}
    nodePort: {{ .Values.securityServer.service.healthNodePort }}
    {{- end }}
  selector:
    app.kubernetes.io/name: {{ include "xroad.name" . }}-security-server
    app.kubernetes.io/instance: {{ .Release.Name }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "xroad.securityServer.fullname" . }}-headless
  labels:
    {{- include "xroad.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: admin
    port: 4000
    targetPort: admin
    protocol: TCP
  - name: consumer
    port: 443
    targetPort: consumer
    protocol: TCP
  - name: transport
    port: 5588
    targetPort: transport
    protocol: TCP
  - name: ocsp
    port: 5577
    targetPort: ocsp
    protocol: TCP
  - name: health
    port: 5580
    targetPort: health
    protocol: TCP
  selector:
    app.kubernetes.io/name: {{ include "xroad.name" . }}-security-server
    app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}
