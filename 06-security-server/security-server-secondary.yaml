# Security Server Secondary Deployment
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ss-secondary-config-pvc
  namespace: xroad
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: security-server-secondary
  namespace: xroad
  labels:
    app: security-server-secondary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: security-server-secondary
  template:
    metadata:
      labels:
        app: security-server-secondary
    spec:
      nodeSelector:
        kubernetes.io/hostname: worker-node-3  # Chỉ định worker node 3
      containers:
      - name: security-server
        image: niis/xroad-security-server-sidecar:7.8.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
        - containerPort: 4000
          name: admin
        - containerPort: 5500
          name: messaging
        - containerPort: 5577
          name: ocsp
        - containerPort: 5588
          name: proxy
        env:
        - name: XROAD_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: xroad-admin-secret
              key: username
        - name: XROAD_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: xroad-admin-secret
              key: password
        - name: XROAD_TOKEN_PIN
          valueFrom:
            secretKeyRef:
              name: xroad-admin-secret
              key: token-pin
        - name: XROAD_DB_HOST
          value: ss-postgres-secondary-service
        - name: XROAD_DB_PORT
          value: "5432"
        - name: XROAD_DB_PWD
          valueFrom:
            secretKeyRef:
              name: ss-db-secret
              key: password
        - name: XROAD_DATABASE_NAME
          value: xroad_ss
        - name: XROAD_LOG_LEVEL
          value: INFO
        - name: XROAD_CENTER_REGISTRATION_SERVICE
          value: cs-registration-service:8443
        - name: XROAD_READ_ONLY_MODE
          value: "true"
        volumeMounts:
        - name: ss-config-volume
          mountPath: /etc/xroad/
        - name: ss-logs-volume
          mountPath: /var/log/xroad
        - name: ss-tmp-volume
          mountPath: /var/tmp/xroad
        - name: ss-cache-volume
          mountPath: /var/cache/xroad
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: ss-config-volume
        persistentVolumeClaim:
          claimName: ss-secondary-config-pvc
      - name: ss-logs-volume
        emptyDir: {}
      - name: ss-tmp-volume
        emptyDir: {}
      - name: ss-cache-volume
        emptyDir: {}
      initContainers:
      - name: ss-init
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "Initializing Security Server Secondary configuration..."
          mkdir -p /etc/xroad/conf.d
          mkdir -p /etc/xroad/services
          echo "Security Server Secondary initialization completed"
        volumeMounts:
        - name: ss-config-volume
          mountPath: /etc/xroad/
---
apiVersion: v1
kind: Service
metadata:
  name: ss-secondary-service
  namespace: xroad
  labels:
    app: security-server-secondary
spec:
  selector:
    app: security-server-secondary
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: https
    port: 8443
    targetPort: 8443
    protocol: TCP
  - name: admin
    port: 4000
    targetPort: 4000
    protocol: TCP
  - name: messaging
    port: 5500
    targetPort: 5500
    protocol: TCP
  - name: ocsp
    port: 5577
    targetPort: 5577
    protocol: TCP
  - name: proxy
    port: 5588
    targetPort: 5588
    protocol: TCP
  type: ClusterIP
