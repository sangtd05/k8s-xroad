---
# Values for local installation (minikube).

# 3 is minimum if synchronous_mode_strict==true
numberOfInstances: 3

team: xtee

applyNetworkPolicy: true
# Allowed namespaces for network policies
postgresOperatorNamespace: postgres-operator
prometheusNamespace: prometheus
dbClientLabels:
- app.kubernetes.io/instance: xrd-security-server

postgresql:
  version: 16
  max_connections: 200

resources:
  limits:
    cpu: 500m
    memory: 500Mi
  requests:
    cpu: 200m
    memory: 100Mi

volume:
  size: 2000Mi
  # iops: 3000
  # throughput: 125

patroni:
  # ttl: 30
  # loop_wait: 10
  # retry_timeout: 10
  synchronous_mode: true
  synchronous_mode_strict: true
  synchronous_node_count: 1
  maximum_lag_on_failover: 0

# Uncomment "clone" configuration when you need to restore instead of creating new cluster
clone: {}
  # cluster: "xrd-pgop"
  # timestamp: "2100-01-01T00:00:00+00:00"

envClone: []
# envClone:
# - name: CLONE_WAL_S3_BUCKET
#   value: "pgop-xtee"
# - name: CLONE_WAL_BUCKET_SCOPE_PREFIX
#   value: ""
# - name: CLONE_WAL_BUCKET_SCOPE_SUFFIX
#   value: ""
# - name: CLONE_USE_WALG_RESTORE
#   value: "true"
# - name: CLONE_AWS_ACCESS_KEY_ID
#   value: "minio"
# - name: CLONE_AWS_SECRET_ACCESS_KEY
#   value: "miniopass"
# - name: CLONE_AWS_S3_FORCE_PATH_STYLE
#   value: "true"
# - name: CLONE_AWS_ENDPOINT
#   value: "https://xrd-s3.example.com:9000"

env:
- name: WAL_S3_BUCKET
  value: "pgop-xtee"
- name: WAL_BUCKET_SCOPE_PREFIX
  value: ""
- name: WAL_BUCKET_SCOPE_SUFFIX
  value: ""
- name: USE_WALG_BACKUP
  value: "true"
- name: USE_WALG_RESTORE
  value: "true"
- name: BACKUP_SCHEDULE
  value: "0 6 * * *"
- name: AWS_ACCESS_KEY_ID
  value: "CHANGE_ME"
- name: AWS_SECRET_ACCESS_KEY
  value: "CHANGE_ME"
- name: AWS_S3_FORCE_PATH_STYLE
  value: "true"
- name: AWS_ENDPOINT
  value: "https://xrd-s3.example.com:9000"
- name: BACKUP_NUM_TO_RETAIN
  value: "3"

additionalVolumes: []

nameOverride: ""
fullnameOverride: ""
