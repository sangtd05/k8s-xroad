# Network Policies
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: xroad-network-policy
  namespace: xroad
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: xroad
    - podSelector: {}
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: xroad
    - podSelector: {}
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
---
# Ingress for External Access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: xroad-ingress
  namespace: xroad
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - cs.xroad.local
    - ss-primary.xroad.local
    - ss-secondary.xroad.local
    secretName: xroad-tls-secret
  rules:
  - host: cs.xroad.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cs-service
            port:
              number: 8443
  - host: ss-primary.xroad.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ss-primary-service
            port:
              number: 8443
  - host: ss-secondary.xroad.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ss-secondary-service
            port:
              number: 8443
---
# Load Balancer for Security Server Primary (Main communication with CS)
apiVersion: v1
kind: Service
metadata:
  name: ss-primary-lb
  namespace: xroad
  labels:
    app: security-server-primary
spec:
  selector:
    app: security-server-primary
  ports:
  - name: messaging
    port: 5500
    targetPort: 5500
    protocol: TCP
  - name: ocsp
    port: 5577
    targetPort: 5577
    protocol: TCP
  - name: proxy
    port: 5588
    targetPort: 5588
    protocol: TCP
  type: LoadBalancer
  loadBalancerSourceRanges:
  - 0.0.0.0/0
---
# Load Balancer for Security Server Secondary (Read-only access)
apiVersion: v1
kind: Service
metadata:
  name: ss-secondary-lb
  namespace: xroad
  labels:
    app: security-server-secondary
spec:
  selector:
    app: security-server-secondary
  ports:
  - name: messaging
    port: 5500
    targetPort: 5500
    protocol: TCP
  - name: ocsp
    port: 5577
    targetPort: 5577
    protocol: TCP
  - name: proxy
    port: 5588
    targetPort: 5588
    protocol: TCP
  type: LoadBalancer
  loadBalancerSourceRanges:
  - 0.0.0.0/0
