# PostgreSQL Initialization Script for Replication
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-script
  namespace: xroad
data:
  01-init-replication.sh: |
    #!/bin/bash
    set -e
    
    # Create replication user
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
        CREATE USER replicator WITH REPLICATION ENCRYPTED PASSWORD 'replicator123';
        GRANT CONNECT ON DATABASE $POSTGRES_DB TO replicator;
        GRANT USAGE ON SCHEMA public TO replicator;
        GRANT SELECT ON ALL TABLES IN SCHEMA public TO replicator;
        ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO replicator;
    EOSQL
    
    # Configure replication for primary
    if [ "$HOSTNAME" = "ss-postgres-primary" ]; then
        echo "Configuring primary database for replication..."
        psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
            SELECT pg_create_physical_replication_slot('replication_slot');
        EOSQL
    fi
    
    # Configure replication for secondary
    if [ "$HOSTNAME" = "ss-postgres-secondary" ]; then
        echo "Configuring secondary database for replication..."
        # Wait for primary to be ready
        until pg_isready -h ss-postgres-primary-service -p 5432 -U replicator; do
            echo "Waiting for primary database..."
            sleep 2
        done
        
        # Stop postgres and setup replication
        pg_ctl stop -D "$PGDATA"
        
        # Remove existing data
        rm -rf "$PGDATA"/*
        
        # Create base backup from primary
        pg_basebackup -h ss-postgres-primary-service -D "$PGDATA" -U replicator -v -P -W -R -S replication_slot
        
        # Start postgres
        pg_ctl start -D "$PGDATA"
    fi
